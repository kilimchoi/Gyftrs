<!DOCTYPE html>
<html>

  <head>
   
    <script src="//d7xe6yl2ckrgs.cloudfront.net/js/2/importio.js"></script>
    <link type="text/css" rel="stylesheet" href="stylesheets/index.css" />
  </head>

  <body style="background-color:#e4e8eb;">
    <div id="page-wrapper">
      <div class="page-header">
        <p style="font-family: Candice; font-size: 55px; color: #de7676; margin-left: 300px">Giftr</p>
    <div id="fb-root"></div>
    <script>
    window.fbAsyncInit = function() {
      FB.init({
        appId      : '683118408381112', // App ID
        channelUrl : '//127.0.0.1:8000/channel.html', // Channel File
        status     : true, // check login status
        cookie     : true, // enable cookies to allow the server to access the session
        xfbml      : true  // parse XFBML
      });
    };
    // Load the SDK asynchronously
    (function(d){
     var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement('script'); js.id = id; js.async = true;
     js.src = "//connect.facebook.net/en_US/all.js";
     ref.parentNode.insertBefore(js, ref);
    }(document));
    var date = new Date();
    var month = date.getUTCMonth()+1;
    var day = date.getUTCDate();

    function loginUser() {    
        FB.login(function(response) { 
          if (response.status === 'connected') {
            var uid = response.authResponse.userID;
            // The response object is returned with a status field that lets the app know the current
            // login status of the person. In this case, we're handling the situation where they 
            // have logged in to the app.
            testAPI(uid);
          } else if (response.status === 'not_authorized') {
            // In this case, the person is logged into Facebook, but not into the app, so we call
            // FB.login() to prompt them to do so. 
            // In real-life usage, you wouldn't want to immediately prompt someone to login 
            // like this, for two reasons:
            // (1) JavaScript created popup windows are blocked by most browsers unless they 
            // result from direct interaction from people using the app (such as a mouse click)
            // (2) it is a bad experience to be continually prompted to login upon page load.
            FB.login();
          } else {
            // In this case, the person is not logged into Facebook, so we call the login() 
            // function to prompt them to do so. Note that at this stage there is no indication
            // of whether they are logged into the app. If they aren't then they'll see the Login
            // dialog right after they log in to Facebook. 
            // The same caveats as above apply to the FB.login() call here.
            FB.login();
          }}, {scope:'friends_birthday, friends_likes, user_likes, user_birthday'}
        );
    }

    // Here we run a very simple test of the Graph API after login is successful. 
    // This testAPI() function is only called in those cases. 
    function testAPI(uid) {
      var query = "SELECT uid, name, birthday_date, music, movies, books FROM user WHERE uid IN (SELECT uid2 FROM friend WHERE uid1=" + uid + ") AND birthday_date >= '07/12' AND music != '' AND movies != '' AND books != '' ORDER BY birthday_date ASC LIMIT 10";
      console.log('Welcome!  Fetching your information.... ');
      FB.api("/fql?q=" + encodeURIComponent(query),
        function(response) {
          //FB.Event.subscribe("auth.login", function () {})
          var friendsList = response['data'];
          console.log(response['data']);
      });
    };
  </script>
  <!--
    Below we include the Login Button social plugin. This button uses the JavaScript SDK to
    present a graphical Login button that triggers the FB.login() function when clicked.

    Learn more about options for the login button plugin:
    /docs/reference/plugins/login/ -->
    <input type="image" name="submit" value="submit" src="images/facebook-button.png">
    <a href="/auth/facebook"</a></input>

      <div class="div-2"><input type="image" style="width:800px; height: 350px" name="submit" value="submit" src="images/manualSearchButton.png" /></div>
      </div>
      </div>
    </body>

</html>
